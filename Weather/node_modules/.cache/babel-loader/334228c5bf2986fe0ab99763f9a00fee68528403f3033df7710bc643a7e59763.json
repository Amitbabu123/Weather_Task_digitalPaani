{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit Kumar Gautam\\\\Downloads\\\\Wather-app-digitalpaani\\\\Weather\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [cityName, setCityName] = useState('');\n  const [unit, setUnit] = useState('metric'); // 'metric' for Celsius, 'imperial' for Fahrenheit\n  const [weatherData, setWeatherData] = useState({\n    temp: '',\n    minTemp: '',\n    maxTemp: '',\n    humidity: '',\n    condition: '',\n    windSpeed: '',\n    windDirection: '',\n    weatherIcon: '',\n    forecast: []\n  });\n  const [error, setError] = useState(\"Enter city\");\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const apiKey = '93f0158fa9047f94d48e22a6b042d3d0';\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${apiKey}&units=${unit}`);\n        const data = await response.json();\n        if (response.ok) {\n          setWeatherData(prevData => ({\n            ...prevData,\n            temp: `${data.main.temp} °${unit === 'metric' ? 'C' : 'F'}`,\n            minTemp: `${data.main.temp_min} °${unit === 'metric' ? 'C' : 'F'}`,\n            maxTemp: `${data.main.temp_max} °${unit === 'metric' ? 'C' : 'F'}`,\n            humidity: `${data.main.humidity}%`,\n            condition: data.weather[0].description,\n            windSpeed: `${data.wind.speed} m/s`,\n            windDirection: `${data.wind.deg}°`,\n            weatherIcon: data.weather[0].icon\n          }));\n          setError('');\n        } else {\n          setError('City not found. Please enter a valid city name.');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        setError('An error occurred while fetching weather data. Please try again.');\n      }\n    };\n    if (cityName) {\n      fetchWeatherData();\n    }\n  }, [cityName, unit, setWeatherData]);\n  useEffect(() => {\n    const fetchForecastData = async () => {\n      try {\n        const apiKey = '93f0158fa9047f94d48e22a6b042d3d0';\n        const forecastResponse = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${apiKey}&units=${unit}`);\n        const forecastData = await forecastResponse.json();\n        if (forecastResponse.ok) {\n          const dailyForecast = forecastData.list.filter(item => item.dt_txt.includes('12:00:00'));\n          const formattedForecast = dailyForecast.map(item => ({\n            date: item.dt_txt.split(' ')[0],\n            avgTemp: `${item.main.temp} °${unit === 'metric' ? 'C' : 'F'}`,\n            description: item.weather[0].description,\n            icon: item.weather[0].icon\n          }));\n\n          // Use the setWeatherData callback form to ensure access to the latest state\n          setWeatherData(prevData => ({\n            ...prevData,\n            forecast: formattedForecast\n          }));\n          setError('');\n        } else {\n          setError('Forecast data not available for the selected city.');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        setError('An error occurred while fetching forecast data. Please try again.');\n      }\n    };\n    if (cityName) {\n      fetchForecastData();\n    }\n  }, [cityName, unit, setWeatherData]);\n  const toggleUnit = () => {\n    setUnit(unit === 'metric' ? 'imperial' : 'metric');\n  };\n  var settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 3,\n    responsive: [{\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3\n      }\n    }, {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2,\n        initialSlide: 0\n      }\n    }, {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter The City Name\",\n          value: cityName,\n          onChange: e => setCityName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unit-converter\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" Unit Toggle Convert \\xB0C to \\xB0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: toggleUnit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: weatherData.temp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Min Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: weatherData.minTemp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Max Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: weatherData.maxTemp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Humidity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: weatherData.humidity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Condition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: weatherData.condition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Wind Speed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: weatherData.windSpeed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Wind Direction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: weatherData.windDirection\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://openweathermap.org/img/w/${weatherData.weatherIcon}.png`,\n            alt: `Weather icon for ${weatherData.condition}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"5-Day Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast\",\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          ...settings,\n          children: weatherData.forecast.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: day.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: day.avgTemp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: day.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://openweathermap.org/img/w/${day.icon}.png`,\n              alt: `Weather icon for ${day.description}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, day.date, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"r97NPvlOi17j67a0FYCA52Hn5tk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Slider","jsxDEV","_jsxDEV","Home","_s","cityName","setCityName","unit","setUnit","weatherData","setWeatherData","temp","minTemp","maxTemp","humidity","condition","windSpeed","windDirection","weatherIcon","forecast","error","setError","fetchWeatherData","apiKey","response","fetch","data","json","ok","prevData","main","temp_min","temp_max","weather","description","wind","speed","deg","icon","console","fetchForecastData","forecastResponse","forecastData","dailyForecast","list","filter","item","dt_txt","includes","formattedForecast","map","date","split","avgTemp","toggleUnit","settings","dots","infinite","slidesToShow","responsive","breakpoint","slidesToScroll","initialSlide","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","day","_c","$RefreshReg$"],"sources":["C:/Users/Amit Kumar Gautam/Downloads/Wather-app-digitalpaani/Weather/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport './style.css';\r\n\r\nconst Home = () => {\r\n  const [cityName, setCityName] = useState('');\r\n  const [unit, setUnit] = useState('metric'); // 'metric' for Celsius, 'imperial' for Fahrenheit\r\n  const [weatherData, setWeatherData] = useState({\r\n    temp: '',\r\n    minTemp: '',\r\n    maxTemp: '',\r\n    humidity: '',\r\n    condition: '',\r\n    windSpeed: '',\r\n    windDirection: '',\r\n    weatherIcon: '',\r\n    forecast: [],\r\n  });\r\n  const [error, setError] = useState(\"Enter city\");\r\n\r\n  useEffect(() => {\r\n    const fetchWeatherData = async () => {\r\n      try {\r\n        const apiKey = '93f0158fa9047f94d48e22a6b042d3d0';\r\n        const response = await fetch(\r\n          `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${apiKey}&units=${unit}`\r\n        );\r\n        const data = await response.json();\r\n  \r\n        if (response.ok) {\r\n          setWeatherData((prevData) => ({\r\n            ...prevData,\r\n            temp: `${data.main.temp} °${unit === 'metric' ? 'C' : 'F'}`,\r\n            minTemp: `${data.main.temp_min} °${unit === 'metric' ? 'C' : 'F'}`,\r\n            maxTemp: `${data.main.temp_max} °${unit === 'metric' ? 'C' : 'F'}`,\r\n            humidity: `${data.main.humidity}%`,\r\n            condition: data.weather[0].description,\r\n            windSpeed: `${data.wind.speed} m/s`,\r\n            windDirection: `${data.wind.deg}°`,\r\n            weatherIcon: data.weather[0].icon,\r\n          }));\r\n          setError('');\r\n        } else {\r\n          setError('City not found. Please enter a valid city name.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        setError('An error occurred while fetching weather data. Please try again.');\r\n      }\r\n    };\r\n  \r\n    if (cityName) {\r\n      fetchWeatherData();\r\n    }\r\n  }, [cityName, unit, setWeatherData]);\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchForecastData = async () => {\r\n      try {\r\n        const apiKey = '93f0158fa9047f94d48e22a6b042d3d0';\r\n        const forecastResponse = await fetch(\r\n          `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${apiKey}&units=${unit}`\r\n        );\r\n        const forecastData = await forecastResponse.json();\r\n  \r\n        if (forecastResponse.ok) {\r\n          const dailyForecast = forecastData.list.filter((item) =>\r\n            item.dt_txt.includes('12:00:00')\r\n          );\r\n  \r\n          const formattedForecast = dailyForecast.map((item) => ({\r\n            date: item.dt_txt.split(' ')[0],\r\n            avgTemp: `${item.main.temp} °${unit === 'metric' ? 'C' : 'F'}`,\r\n            description: item.weather[0].description,\r\n            icon: item.weather[0].icon,\r\n          }));\r\n  \r\n          // Use the setWeatherData callback form to ensure access to the latest state\r\n          setWeatherData((prevData) => ({\r\n            ...prevData,\r\n            forecast: formattedForecast,\r\n          }));\r\n          setError('');\r\n        } else {\r\n          setError('Forecast data not available for the selected city.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        setError('An error occurred while fetching forecast data. Please try again.');\r\n      }\r\n    };\r\n  \r\n    if (cityName) {\r\n      fetchForecastData();\r\n    }\r\n  }, [cityName, unit, setWeatherData]);\r\n  \r\n\r\n  const toggleUnit = () => {\r\n    setUnit(unit === 'metric' ? 'imperial' : 'metric');\r\n  };\r\n  var settings = {\r\n    dots: true,\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 3\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n          initialSlide: 0\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1\r\n        }\r\n      }\r\n    ]\r\n  };\r\n  return (\r\n    <div className='container'>\r\n      <div className='weather'>\r\n        <div className='search'>\r\n          <input\r\n            type='text'\r\n            placeholder='Enter The City Name'\r\n            value={cityName}\r\n            onChange={(e) => setCityName(e.target.value)}\r\n          />\r\n        </div>\r\n          {/* <button onClick={toggleUnit}>Search</button> */}\r\n          <div className=\"unit-converter\">\r\n    <span> Unit Toggle Convert °C to °F</span>\r\n    <input type=\"checkbox\" onChange={toggleUnit} />\r\n  </div>\r\n          \r\n        {error && <p className='error'>{error}</p>}\r\n        <div className='weather-cards'>\r\n          <div className='card'>\r\n            <h3>Temperature</h3>\r\n            <p>{weatherData.temp}</p>\r\n          </div>\r\n          <div className='card'>\r\n            <h3>Min Temperature</h3>\r\n            <p>{weatherData.minTemp}</p>\r\n          </div>\r\n          <div className='card'>\r\n            <h3>Max Temperature</h3>\r\n            <p>{weatherData.maxTemp}</p>\r\n          </div>\r\n          <div className='card'>\r\n            <h3>Humidity</h3>\r\n            <p>{weatherData.humidity}</p>\r\n          </div>\r\n          <div className='card'>\r\n            <h3>Condition</h3>\r\n            <p>{weatherData.condition}</p>\r\n          </div>\r\n          <div className='card'>\r\n            <h3>Wind Speed</h3>\r\n            <p>{weatherData.windSpeed}</p>\r\n          </div>\r\n          <div className='card'>\r\n            <h3>Wind Direction</h3>\r\n            <p>{weatherData.windDirection}</p>\r\n          </div>\r\n          <div className='card'>\r\n            <img\r\n              src={`https://openweathermap.org/img/w/${weatherData.weatherIcon}.png`}\r\n              alt={`Weather icon for ${weatherData.condition}`}\r\n            />\r\n          </div>\r\n        </div>\r\n          <h2>5-Day Forecast</h2>\r\n        {!error && <div className='forecast'>\r\n          <Slider {...settings}>\r\n            {weatherData.forecast.map((day) => (\r\n              <div className='forecast-card' key={day.date}>\r\n                <p>{day.date}</p>\r\n                <p>{day.avgTemp}</p>\r\n                <p>{day.description}</p>\r\n                <img\r\n                  src={`https://openweathermap.org/img/w/${day.icon}.png`}\r\n                  alt={`Weather icon for ${day.description}`}\r\n                />\r\n              </div>\r\n            ))}\r\n          </Slider>\r\n        </div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}